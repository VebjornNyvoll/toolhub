import { type NextPage } from "next";
import React, { useState, useEffect } from "react";
import Head from "next/head";
import Link from "next/link";
import Navbar from "../components/navbar/Navbar";
import { signIn, signOut, useSession } from "next-auth/react";
import InputField from "../components/inputs/InputField";
import InputBox from "../components/inputs/InputBox";
import Button, { ColorOptions } from "../components/buttons/Button";
import { useRouter } from "next/router";

import { api } from "../utils/api";
import { contextProps } from "@trpc/react-query/shared";

import { Listbox, Transition } from "@headlessui/react";

const categories = [
  {
    id: 0,
    name: "Håndverktøy",
    subcategories: [
      { id: 1, name: "Håndsag" },
      { id: 2, name: "Tang" },
      { id: 3, name: "Hammer" },
      { id: 4, name: "Skiftnøkkel" },
      { id: 5, name: "Skrutrekker" },
      { id: 6, name: "Klemmer" },
      { id: 7, name: "Meisler" },
      { id: 8, name: "Målebånd" },
      { id: 9, name: "Målebånd" },
    ],
  },
  {
    id: 1,
    name: "Elektroverktøy",
    subcategories: [
      { id: 1, name: "Bore" },
      { id: 2, name: "Muttertrekker" },
      { id: 3, name: "Slipemaskin" },
      { id: 4, name: "Vinkesliper" },
      { id: 5, name: "Sag" },
      { id: 6, name: "Spikerpistol" },
    ],
  },
  {
    id: 2,
    name: "Hage",
    subcategories: [
      { id: 1, name: "Spade" },
      { id: 2, name: "Saks" },
      { id: 3, name: "Rake" },
      { id: 4, name: "Riv" },
    ],
  },
  {
    id: 3,
    name: "Annet",
    subcategories: [
      { id: 1, name: "Stige" },
      { id: 2, name: "Aggregat" },
      { id: 3, name: "Arbeidslys" },
      { id: 4, name: "Tilhenger" },
    ],
  },
];

const Home: NextPage = () => {
  const { data: sessionData } = useSession();
  const ctx = api.useContext();
  const [selectedCategory, setSelectedCategory] = useState(categories[0]);
  const [selectedSubCategory, setSelectedSubCategory] = useState(
    selectedCategory?.subcategories[0]
  );

  useEffect(() => {
    setSelectedSubCategory(selectedCategory?.subcategories[0]);
    console.log("CHANGED");
  }, [selectedCategory, setSelectedCategory]);

  const router = useRouter();

  const { mutate: createAdvert } = api.advertisment.create.useMutation({
    onSuccess: (data) => {
      ctx.advertisment
        .invalidate()
        .then(() => {
          console.log("success");
          void router.push(`/annonse/${data.id}`);
        })
        .catch((err) => {
          console.log(err);
        });
    },
  });

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const target = e.target as typeof e.target & {
      title: { value: string };
      price: { value: string };
      description: { value: string };
    };
    const tittel = target.title.value;
    const pris: number = +target.price.value;
    const description = target.description.value;
    createAdvert({
      title: tittel,
      price: pris,
      description: description,
    });
  };

  return (
    <>
      <Head>
        <title>Toolhub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mx-[120px] flex h-screen flex-col items-center justify-end bg-gray-100">
        <Navbar />
        <div className="container flex h-4/5 w-full animate-from-bottom flex-col items-center justify-start rounded-t-2xl bg-white py-12 px-16 opacity-[0%] shadow-sm">
          <h1 className="mb-6 self-start font-sofia text-2xl font-semibold">
            Opprett en ny annonse
          </h1>
          <form
            className="flex w-full flex-col gap-8"
            onSubmit={(e) => handleSubmit(e)}
          >
            <div className="flex w-full flex-row gap-8">
              <InputField label="Tittel" name="title" className="flex-1" />
              <InputField
                label="Pris (per dag)"
                name="price"
                placeholder="NOK"
              />
            </div>
            <div className="flex h-full flex-row justify-end gap-12">
              <div className="left-[4rem] z-10 flex w-7/12 flex-col">
                <div className="z-10 h-20">
                  <p>Kategori</p>
                  <Listbox
                    value={selectedCategory}
                    onChange={setSelectedCategory}
                    name="category"
                    as="div"
                    className="mt-1 w-full overflow-hidden rounded-3xl border-2 border-solid border-black bg-gray-100"
                  >
                    <Listbox.Button className="px-4 py-2">
                      {selectedCategory?.name}
                    </Listbox.Button>
                    <Transition
                      enter="transition duration-100 ease-out"
                      enterFrom="transform scale-95 opacity-0"
                      enterTo="transform scale-100 opacity-100"
                      leave="transition duration-75 ease-out"
                      leaveFrom="transform scale-100 opacity-100"
                      leaveTo="transform scale-95 opacity-0"
                    >
                      <Listbox.Options className="flex flex-col border-t-2 border-solid border-black">
                        {categories.map((category) => (
                          <Listbox.Option
                            key={category.id}
                            value={category}
                            className="bg-transparent px-4 py-3 hover:bg-green-200"
                          >
                            {category.name}
                          </Listbox.Option>
                        ))}
                      </Listbox.Options>
                    </Transition>
                  </Listbox>
                </div>
                <div className="h-20">
                  <p>Underkategori</p>
                  <Listbox
                    value={selectedSubCategory}
                    onChange={setSelectedSubCategory}
                    name="category"
                    as="div"
                    className="mt-1 w-full overflow-hidden rounded-3xl border-2 border-solid border-black bg-gray-100"
                  >
                    <Listbox.Button className="px-4 py-2">
                      {selectedSubCategory?.name}
                    </Listbox.Button>
                    <Transition
                      enter="transition duration-100 ease-out"
                      enterFrom="transform scale-95 opacity-0"
                      enterTo="transform scale-100 opacity-100"
                      leave="transition duration-75 ease-out"
                      leaveFrom="transform scale-100 opacity-100"
                      leaveTo="transform scale-95 opacity-0"
                    >
                      <Listbox.Options className="flex flex-col border-t-2 border-solid border-black">
                        {selectedCategory?.subcategories.map((subcategory) => (
                          <Listbox.Option
                            key={subcategory.id}
                            value={subcategory}
                            className="bg-transparent px-4 py-3 hover:bg-green-200"
                          >
                            {subcategory.name}
                          </Listbox.Option>
                        ))}
                      </Listbox.Options>
                    </Transition>
                  </Listbox>
                </div>
              </div>
              <div className="flex h-[18rem] w-full flex-row gap-12 ">
                <InputBox
                  label="Beskrivelse"
                  name="description"
                  className="flex-1"
                  placeholder="Beskriv hva du leier ut"
                />
              </div>
            </div>
            <div className="w-[15rem] self-end">
              <label>
                <input
                  type="submit"
                  value="Opprett annonse"
                  className="w-full cursor-pointer rounded-md bg-black px-4 py-2 text-white hover:bg-emerald-700"
                />
              </label>
            </div>
          </form>
        </div>
      </main>
    </>
  );
};

export default Home;
