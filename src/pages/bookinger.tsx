import { NextPage } from "next";
import { useState, useEffect } from "react";
import Ad from "../components/ad/Ad";
import Button, { ColorOptions } from "../components/buttons/Button";
import Navbar from "../components/navbar/Navbar";
import Head from "next/head";
import { api } from "../utils/api";
import Searchbar from "../components/searchbar/Searchbar";
import Booking from "../components/booking/Booking";

const ToolFeed: NextPage = () => {
  const { data: bookings } = api.booking.getYourBookings.useQuery();
  const { data: profile } = api.profile.getLoggedInUser.useQuery();

  const ctx = api.useContext();

  //importere liste med kategorier som vi kan iterere gjennom til knappene
  return (
    <>
      <Head>
        <title>Toolhub | Annonser</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gray-100">
        <Navbar />
        <section className="mt-40 flex flex-col gap-5 px-[120px]">
          <p className="font-futura text-2xl">
            Se gjennom <span className="text-orange-500">dine bookinger</span>
          </p>
          <p className="font-futura text-md text-gray-400">
            Du har {bookings?.length} kommende bookinger!
          </p>
          <div className="mb-5 flex max-w-full flex-col gap-3">
            {bookings
              ?.filter((date) => {
                const dateNow = new Date();
                const dateBooking = new Date(
                  new Date().setDate(dateNow.getDate() + 1)
                );
                return dateNow < dateBooking;
              })
              .map((booking, index) => (
                <Booking
                  key={index}
                  title={booking.advert.title}
                  date={booking.date}
                  telephone={
                    profile?.id == booking.advert.authorId
                      ? booking.user.phone
                      : booking.advert.author.phone
                  }
                  subcategory={booking.advert.subCategoryName}
                  renting={
                    profile?.id == booking.advert.authorId ? true : false
                  }
                  renter={
                    profile?.id == booking.advert.authorId
                      ? booking.user.name
                      : booking.advert.author.name
                  }
                />
              ))}
          </div>
          <p className="font-futura text-md text-gray-400">
            Tidligere bookinger
          </p>
          <div className="mb-20 flex max-w-full flex-col gap-3">
            {bookings
              ?.filter((date) => {
                const dateNow = new Date();
                const dateBooking = new Date(
                  new Date().setDate(dateNow.getDate() + 1)
                );
                return dateNow > dateBooking;
              })
              .map((booking, index) => (
                <Booking
                  key={index}
                  title={booking.advert.title}
                  date={new Date(booking.date)}
                  telephone={
                    profile?.id == booking.advert.authorId
                      ? booking.user.phone
                      : booking.advert.author.phone
                  }
                  subcategory={booking.advert.subCategoryName}
                  renting={
                    profile?.id == booking.advert.authorId ? true : false
                  }
                  renter={
                    profile?.id == booking.advert.authorId
                      ? booking.user.name
                      : booking.advert.author.name
                  }
                />
              ))}
          </div>
        </section>
      </main>
    </>
  );
};

export default ToolFeed;
